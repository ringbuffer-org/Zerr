#N canvas 2209 -237 2241 1360 12;
#X obj 19 192 noise~;
#N canvas 2253 65 1335 748 reference 1;
#X obj 18 52 cnv 5 550 5 empty empty INLET: 8 18 0 13 #202020 #000000 0;
#X obj 18 104 cnv 2 550 2 empty empty OUTLET: 8 12 0 13 #202020 #000000 0;
#X obj 17 143 cnv 2 550 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000 0;
#X obj 18 178 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X text 168 19 - multiply the source audio with the envelopes;
#X text 90 107 signal - multiplied signals;
#X text 89 61 signal - main inlet: source audio signal signal - rest inlests: envelope signals;
#X obj 22 17 zerr_disperser~ 4;
#X text 112 147 float - inlet & outlet number. Inlet number is outlet number + 1, f 64;
#X restore 13 617 pd reference;
#X text 107 617 <= click;
#X obj 17 45 cnv 1 520 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 12 605 cnv 1 520 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 19 350 zerr_disperser~ 2;
#N canvas 0 22 450 278 (subpatch) 0;
#X array chnl2 4410 float 0;
#X coords 0 1 4409 -1 200 100 1 0 0;
#X restore 307 490 graph;
#X text 8 579 -1;
#X text 15 533 0;
#X text 16 482 1;
#X msg 222 327 0;
#X msg 164 301 0.5;
#X obj 19 451 tabwrite~ chnl1;
#X obj 135 451 tabwrite~ chnl2;
#N canvas 0 22 450 278 (subpatch) 0;
#X array chnl1 4410 float 0;
#X coords 0 1 4409 -1 200 100 1 0 0;
#X restore 31 490 graph;
#X text 285 580 -1;
#X text 292 534 0;
#X text 293 483 1;
#X obj 52 408 metro 100;
#X obj 52 379 loadbang;
#X obj 164 275 loadbang;
#X obj 77 300 phasor~ 0.5;
#X obj 135 327 phasor~ 0.5;
#X text 285 434 -1;
#X text 292 388 0;
#X text 293 337 1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array source 4410 float 0;
#X coords 0 1 4409 -1 200 100 1 0 0;
#X restore 308 345 graph;
#X obj 78 251 tabwrite~ source;
#X obj 78 222 metro 100;
#X obj 78 193 loadbang;
#X obj 222 304 loadbang;
#X text 152 15 - multiply the source signal with the envelopes;
#X msg 399 244 \; pd dsp \$1;
#X text 430 213 DSP on/off;
#X text 16 54 The [zerr_disperser~] is for simply multiply the source signal with the envelopes to achieve multichannel panning. The main inlet receives the source signal and the rest receive each envelope. The outlets output multiplied signals., f 69;
#X text 16 119 In the help patch \, source signal is white noise generated by [noise~]. Two envelopes are generated using phasor with same frequency but different init phase., f 69;
#N canvas 1923 -247 499 459 set-dsp-tgl 0;
#X msg 241 138 set 0;
#X msg 182 109 set 1;
#X obj 182 172 s \$0-set-tgl;
#X obj 182 202 r \$0-tgl;
#X obj 182 246 outlet;
#X obj 105 106 tgl 20 0 \$0-tgl \$0-set-tgl empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 28 17 This is a simple helper abstraction for the Pd docs that sets the toggle according to the DSP state., f 42;
#N canvas 172 166 401 276 pd-messages 0;
#X obj 101 75 inlet;
#X obj 101 133 pdcontrol;
#X msg 101 105 dir;
#X msg 101 163 \; pd open pd-messages.pd \$1;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X restore 237 389 pd pd-messages;
#X obj 182 80 receive pd-dsp-started;
#X obj 241 109 receive pd-dsp-stopped;
#X text 46 302 The trick is to rely on these messages sent by Pd. For more details on these and other messages that Pd sends or receives \, click here --->, f 39;
#X obj 237 353 bng 21 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 8 0 1 0;
#X connect 9 0 0 0;
#X connect 11 0 7 0;
#X coords 0 -1 1 1 30 30 2 100 100;
#X restore 399 206 pd set-dsp-tgl;
#X obj 19 14 zerr_disperser~ 5;
#X connect 0 0 5 0;
#X connect 0 0 27 0;
#X connect 5 0 12 0;
#X connect 5 1 13 0;
#X connect 10 0 22 1;
#X connect 11 0 21 1;
#X connect 18 0 13 0;
#X connect 18 0 12 0;
#X connect 19 0 18 0;
#X connect 20 0 11 0;
#X connect 21 0 5 1;
#X connect 22 0 5 2;
#X connect 28 0 27 0;
#X connect 29 0 28 0;
#X connect 30 0 10 0;
#X connect 36 0 32 0;
#X coords 0 0 0.5 0.5 85 60 0;
