name: build zerr-core static library

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'core/**'

jobs:
  macOS:
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Conan
        run: |
          pip install conan
          conan profile detect

      - name: Install Dependencies
        working-directory: core
        run: |
          conan install . --output-folder=build --build=missing

      - name: Build Static Library
        working-directory: core
        run: |
          cd build/
          cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build .
          make install

      - name: Upload zerr-core library
        uses: actions/upload-artifact@v4
        with:
          name: zerr-core-macos
          path: core/lib
          retention-days: 1

  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Conan
        run: |
          pip install conan
          conan profile detect

      - name: Install Dependencies
        working-directory: core
        run: |
          conan install . --output-folder=build --build=missing

      - name: Build Static Library
        working-directory: core
        run: |
          export CXXFLAGS="-fPIC"
          cd build/
          cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build .
          make install

      - name: Upload zerr-core library
        uses: actions/upload-artifact@v4
        with:
          name: zerr-core-linux
          path: core/lib
          retention-days: 1

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Set up Conan
  #       run: |
  #         pip install conan
  #         conan profile detect

  #     - name: Install Dependencies
  #       working-directory: core
  #       run: |
  #         mkdir build
  #         conan install . --output-folder=build --build=missing

  #     - name: Build Static Library
  #       working-directory: core
  #       run: |
  #         cmake --preset conan-default
  #         cmake --build build --config Release

  #     - name: Copy Lib File
  #       working-directory: core
  #       run: |
  #         mkdir lib -Force
  #         copy build\Release\zerr_core.lib  lib\

  #     - name: Upload zerr-core library
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: zerr-core-windows
  #         path: core/lib
  #         retention-days: 1

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-make
            mingw-w64-x86_64-pkg-config
            make

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Conan with MinGW
        run: |
          pip install conan
          mkdir -p ~/.conan2/profiles/
          echo "[settings]" > ~/.conan2/profiles/mingw
          echo "os=Windows" >> ~/.conan2/profiles/mingw
          echo "arch=x86_64" >> ~/.conan2/profiles/mingw
          echo "compiler=gcc" >> ~/.conan2/profiles/mingw
          echo "compiler.version=12" >> ~/.conan2/profiles/mingw
          echo "compiler.libcxx=libstdc++11" >> ~/.conan2/profiles/mingw
          echo "build_type=Release" >> ~/.conan2/profiles/mingw
          
          # Display the created profile
          cat ~/.conan2/profiles/mingw

      - name: Install Dependencies with Conan
        working-directory: core
        run: |
          mkdir -p build
          # Use the MinGW profile we created
          conan install . --output-folder=build --build=missing -pr=mingw

      - name: Build Static Library
        working-directory: core
        run: |
          cd build
          # Use MSYS Makefiles with Conan toolchain
          cmake .. -G "MSYS Makefiles" -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          make
          make install

      - name: Display lib directory contents
        working-directory: core
        run: |
          ls -la lib/

      - name: Upload zerr-core library
        uses: actions/upload-artifact@v4
        with:
          name: zerr-core-windows
          path: core/lib
          retention-days: 1